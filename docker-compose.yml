version: "2"

networks:
  tasks:
  k6:
  grafana:

services:
  tasks-api:
    build:
      context: ./task-service
      dockerfile: ./Dockerfile
    image: telnoiko/tasks-api:dev
    container_name: "tasks-api"
    hostname: "tasks-api"
    networks:
      - tasks
    ports:
      - "1323:1323"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:15.2-alpine
    restart: always
    networks:
      - tasks
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: tasks
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./task-service/db/db.sql:/docker-entrypoint-initdb.d/db.sql
    ports:
      - "5432:5432"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # https://medium.com/swlh/beautiful-load-testing-with-k6-and-docker-compose-4454edb3a2e3
  influxdb:
    image: influxdb:1.8
    networks:
      - k6
      - grafana
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6

  grafana:
    image: grafana/grafana:8.5.21
    networks:
      - grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ./dashboards:/var/lib/grafana/dashboards
      - ./grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml

  k6:
    image: loadimpact/k6:latest
    networks:
      - k6
      - tasks
    ports:
      - "6565:6565"
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./k6:/scripts